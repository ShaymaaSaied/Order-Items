<?php

/**
 * Created by PhpStorm.
 * User: Shaymaa
 * Date: 26/12/2018
 * Time: 16:57
 */

namespace MageArab\OrderItems\Block\Adminhtml\Order\View\Items\Renderer;


class NewRenderer extends \Magento\Sales\Block\Adminhtml\Order\View\Items\Renderer\DefaultRenderer {

    protected $_messageHelper;

    /**
     * Checkout helper
     *
     * @var \Magento\Checkout\Helper\Data
     */
    protected $_checkoutHelper;

    /**
     * Giftmessage object
     *
     * @var \Magento\GiftMessage\Model\Message
     */
    protected $_giftMessage = [];

    protected $_imageHelper;

    protected $_dataHelper;

    /**
     * @param \Magento\Backend\Block\Template\Context $context
     * @param \Magento\CatalogInventory\Api\StockRegistryInterface $stockRegistry
     * @param \Magento\CatalogInventory\Api\StockConfigurationInterface $stockConfiguration
     * @param \Magento\Framework\Registry $registry
     * @param \Magento\GiftMessage\Helper\Message $messageHelper
     * @param \Magento\Checkout\Helper\Data $checkoutHelper
     * @param array $data
     */
    public function __construct(
        \Magento\Backend\Block\Template\Context $context,
        \Magento\CatalogInventory\Api\StockRegistryInterface $stockRegistry,
        \Magento\CatalogInventory\Api\StockConfigurationInterface $stockConfiguration,
        \Magento\Framework\Registry $registry,
        \Magento\GiftMessage\Helper\Message $messageHelper,
        \Magento\Checkout\Helper\Data $checkoutHelper,
        \Magento\Catalog\Helper\Image $imageHelper,
        \MageArab\OrderItems\Helper\Data    $dataHelper,
        array $data = []
    ) {
        $this->_checkoutHelper = $checkoutHelper;
        $this->_messageHelper = $messageHelper;
        $this->_imageHelper=$imageHelper;
        $this->_dataHelper=$dataHelper;
        parent::__construct($context, $stockRegistry, $stockConfiguration, $registry,$messageHelper,$checkoutHelper, $data);
    }

    public function getColumnHtml(\Magento\Framework\DataObject $item, $column, $field = null)
    {
        //return parent::getColumnHtml($item, $column, $field); // TODO: Change the autogenerated stub
        $product=$item->getProduct();
        $imageUrl = $this->_imageHelper->init($product, 'small_image')->setImageFile($product->getSmallImage())->resize(50, 50)->getUrl();
        $html = '';
        switch ($column) {
            case 'product':
                if ($this->canDisplayContainer()) {
                    $html .= '<div id="' . $this->getHtmlId() . '">';
                }
                $html .='<img src="'.$imageUrl.'" width="50" height="50" style="max-width: none !important;"/>';
                $html .= $this->getColumnHtml($item, 'name');
                if ($this->canDisplayContainer()) {
                    $html .= '</div>';
                }
                break;
            case 'status':
                $html = $item->getStatus();
                break;
            case 'shipping_status':
                $html = $this->_dataHelper->getShippingStatusLabel($item->getShippingStatus());
                break;
            case 'price-original':
                $html = $this->displayPriceAttribute('original_price');
                break;
            case 'tax-amount':
                $html = $this->displayPriceAttribute('tax_amount');
                break;
            case 'tax-percent':
                $html = $this->displayTaxPercent($item);
                break;
            case 'discont':
                $html = $this->displayPriceAttribute('discount_amount');
                break;
            case 'merchant_code':
                $html.='<div class="editable-column" id="' . $this->getHtmlId() . '">';
                $html.='<input type="text" name="merchant_code" data-id="'.$item->getId().'" id="merchant-code-'.$item->getId().'" class="editable-input" value="'.$item->getMerchantCode().'">';
                $html .= '</div>';
                break;
            case 'barcode':
                $html = $item->getBarcode();
                break;
            case 'merchant_order_number':
                $html.='<div class="editable-column" id="' . $this->getHtmlId() . '">';
                $html.='<input type="text" name="merchant_order_number" data-id="'.$item->getId().'" id="merchant_order_number-'.$item->getId().'" class="editable-input" value="'.$item->getMerchantOrderNumber().'">';
                $html .= '</div>';
                break;
            case 'buy_request':
               $options= $item->getBuyRequest();
               //var_dump($item->getBuyRequest()->getItemCustoms());

               // die();
                $html = '<div><span>Hatolna Fees:</span>'.'<span>$'.$options->getItemHatolnafees().'</span>'.'<br/>';
                $html .='<span>Customs:</span>'.'<span>$'.$options->getItemCustoms().'</span>'.'<br/>';
                $html .='<span>declaration:</span>'.'<span>$'.$options->getItemDeclaration().'</span>'.'<br/>';
                $html .='<span>USA Taxes:</span>'.'<span>$'.$options->getItemUsatax().'</span>'.'<br/>';
                $html .='<span>VAT:</span>'.'<span>$'.$options->getItemVat().'</span>'.'<br/>';
                $html .='<span>International Shipping:</span>'.'<span>$'.$options->getItemInternationalShipping().'</span>'.'<br/>';
                $html .= '</div>';
                break;
            default:
                $html = parent::getColumnHtml($item, $column, $field);
        }
        return $html;
    }

}